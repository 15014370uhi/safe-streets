[{"D:\\github\\safe-streets\\src\\index.jsx":"1","D:\\github\\safe-streets\\src\\App.jsx":"2","D:\\github\\safe-streets\\src\\components\\Nav.jsx":"3","D:\\github\\safe-streets\\src\\components\\FavouritesList.jsx":"4","D:\\github\\safe-streets\\src\\components\\AddFavourite.jsx":"5","D:\\github\\safe-streets\\src\\context\\FavouritesContext.jsx":"6","D:\\github\\safe-streets\\src\\components\\Favourite.jsx":"7","D:\\github\\safe-streets\\src\\components\\MapSection.jsx":"8","D:\\github\\safe-streets\\src\\components\\MapImage.jsx":"9","D:\\github\\safe-streets\\src\\components\\FilterButtonsList.jsx":"10","D:\\github\\safe-streets\\src\\util\\fire.jsx":"11","D:\\github\\safe-streets\\src\\components\\SearchForm.jsx":"12","D:\\github\\safe-streets\\src\\components\\Login.jsx":"13"},{"size":219,"mtime":1610645850427,"results":"14","hashOfConfig":"15"},{"size":3984,"mtime":1610895824662,"results":"16","hashOfConfig":"15"},{"size":1130,"mtime":1610895452214,"results":"17","hashOfConfig":"15"},{"size":714,"mtime":1610805240360,"results":"18","hashOfConfig":"15"},{"size":1974,"mtime":1610825507309,"results":"19","hashOfConfig":"15"},{"size":1429,"mtime":1610714475133,"results":"20","hashOfConfig":"15"},{"size":457,"mtime":1610717223196,"results":"21","hashOfConfig":"15"},{"size":652,"mtime":1610816333086,"results":"22","hashOfConfig":"15"},{"size":760,"mtime":1610816274729,"results":"23","hashOfConfig":"15"},{"size":2251,"mtime":1610815812791,"results":"24","hashOfConfig":"15"},{"size":447,"mtime":1610890345112,"results":"25","hashOfConfig":"15"},{"size":625,"mtime":1610893557663,"results":"26","hashOfConfig":"15"},{"size":1557,"mtime":1610894786189,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"h7snft",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\github\\safe-streets\\src\\index.jsx",[],["61","62"],"D:\\github\\safe-streets\\src\\App.jsx",["63"],"D:\\github\\safe-streets\\src\\components\\Nav.jsx",["64"],"D:\\github\\safe-streets\\src\\components\\FavouritesList.jsx",["65","66"],"import React, {useState, useContext} from 'react';\r\nimport Favourite from './Favourite';\r\nimport {FavouritesContext} from '../context/FavouritesContext';\r\nimport uuid from 'react-uuid';\r\nimport '../App.css';\r\n\r\nconst FavouritesList = () => {\r\n\r\n\t// Set the context as FavouritesContext\r\n  const [favourites, setFavourites] = useContext (FavouritesContext);\r\n\r\n  // List each favourite using Favourite component and data from FavouritesContext for props\r\n  return (\r\n    <div>\r\n    <li className=\"favourite\">\r\n      {favourites.map (favourite => (\r\n        <Favourite title={favourite.title} mapURL={favourite.mapURL} key={uuid()} />\r\n      ))}\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavouritesList;\r\n","D:\\github\\safe-streets\\src\\components\\AddFavourite.jsx",["67"],"//TODO - mapURL will be retrieved from API\r\n//TODO - addFavourite will use mongoose schema\r\n//TODO - add and update favourite will use mongoDB\r\n\r\nimport React, {useState, useContext} from 'react';\r\nimport {FavouritesContext} from '../context/FavouritesContext';\r\n\r\n// UI elements import\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst AddFavourite = () => {\r\n\r\n  // Favourites context imported\r\n  const [favourites, setFavourites] = useContext (FavouritesContext);\r\n\r\n  // Set local state for each value of title and mapURL\r\n  const [title, setTitle] = useState ('');\r\n  const [mapURL, setMapURL] = useState ('');\r\n\r\n  // Event handler to update title local state with user input\r\n  const updateTitle = e => {\r\n    setTitle (e.target.value);\r\n  };\r\n\r\n  // Event handler to update mapURL local state with user input\r\n  const updateMapURL = e => {\r\n    setMapURL (e.target.value);\r\n  };\r\n\r\n  // Event handler to add new favourite to favourites context state\r\n  const addFavourite = e => {\r\n    e.preventDefault ();\r\n\r\n    // Get previous favourites state and add a new favourite object\r\n    setFavourites (prevFavourites => [...prevFavourites,\r\n      {\r\n        title: title,\r\n        mapURL: mapURL,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  // Eventually ** mapURL will be from wherever I store it after a search and not updated from user typing in form\r\n\r\n  // title and mapURL local state updated on each keystroke, then new favourite added when form submitted using\r\n  // local variables\r\n  return (\r\n    <form onSubmit={addFavourite}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        value={title}\r\n        placeholder=\"Note...\"\r\n        onChange={updateTitle}\r\n      />\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"mapURL\"\r\n        value={mapURL}\r\n        placeholder=\"TEST URL...\"\r\n        onChange={updateMapURL}\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\">Submit</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddFavourite;\r\n","D:\\github\\safe-streets\\src\\context\\FavouritesContext.jsx",[],"D:\\github\\safe-streets\\src\\components\\Favourite.jsx",[],"D:\\github\\safe-streets\\src\\components\\MapSection.jsx",["68"],"//TODO - will contain map image, favourite options and filter buttons components\r\n\r\nimport React from 'react';\r\nimport Nav from './Nav';\r\nimport MapImage from './MapImage';\r\nimport FilterButtonsList from './FilterButtonsList';\r\nimport AddFavourite from './AddFavourite';\r\nimport '../App.css';\r\n\r\nconst MapSection = () => {\r\n  return (\r\n    <div>      \r\n      <div className=\"MapImage\">\r\n        <MapImage />\r\n      </div>    \r\n        <div className=\"FilterButtons\">\r\n         <FilterButtonsList />\r\n        </div>\r\n        <div className=\"AddFavourite\">\r\n          <AddFavourite />\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapSection;\r\n","D:\\github\\safe-streets\\src\\components\\MapImage.jsx",["69"],"import React, {useState} from 'react';\r\nimport '../App.css';\r\n\r\n// TODO - put this in a container which can display the title if favourited\r\n// TODO -Will need state>?  with default as UK wide map - then if back button from account\r\n// TODO -page etc can reload current map from state?  what about history?\r\n\r\n/**\r\n * Component to display a static map image \r\n * \r\n * @param {string} mapURL - URL for map image\r\n */\r\nconst MapImage = ({mapURL}) => {\r\n\r\nvar mapImageURL = 'https://www.mapquestapi.com/staticmap/v5/map?key=HaI8dvLBtirhMstWmwrcbkRmltyyHAT2&locations=England&size=@2x';\r\n\r\nif(mapURL !== undefined){\r\n  mapImageURL = mapURL;\r\n}\r\n\r\nreturn (   \r\n      <img className=\"mapImg\" src={mapImageURL} alt=\"Map\" />    \r\n  );\r\n};\r\n\r\nexport default MapImage;\r\n","D:\\github\\safe-streets\\src\\components\\FilterButtonsList.jsx",["70"],"import React, {useState} from 'react';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport uuid from 'react-uuid';\r\nimport '../App.css';\r\n\r\n\r\nconst FilterButtonsList = () => {\r\n\r\n\t// Set filter state\r\n\tconst [filters, setFilters] = useState([\r\n\t\t{\r\n\t\t\tname: 'Theft',\r\n\t\t\tdisplayCrimes: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Burglary',\r\n\t\t\tdisplayCrimes: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Drugs',\r\n\t\t\tdisplayCrimes: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Weapons',\r\n\t\t\tdisplayCrimes: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Anti-Social',\r\n\t\t\tdisplayCrimes: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Robbery',\r\n\t\t\tdisplayCrimes: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Vehicle Crime',\r\n\t\t\tdisplayCrimes: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Violent Offences',\r\n\t\t\tdisplayCrimes: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Public Order',\r\n\t\t\tdisplayCrimes: true,\r\n\t\t},\r\n\t]);\r\n\r\n\t// TODO https://stackoverflow.com/questions/57888975/how-to-update-react-context-provider-state-on-button-click\r\n\r\n\tconst defaultFilters = [\r\n\t\t'Theft',\r\n\t\t'Burglary',\r\n\t\t'Drugs',\r\n\t\t'Weapons',\r\n\t\t'Anti-Social',\r\n\t\t'Robbery',\r\n\t\t'Vehicle Crime',\r\n\t\t'Violent Offences',\r\n\t\t'Public Order',\r\n\t];\r\n\r\n\t// State for material-ui button styling\r\n\tconst [formats, setFormats] = useState(defaultFilters);\r\n\r\n\tconst handleFormat = (event, activeFilters) => {\r\n\t\tif (activeFilters.includes('reset')) {\r\n\t\t\tsetFormats(defaultFilters); // Reset button clicked - Reset all filters\r\n\t\t} else {\r\n\t\t\tsetFormats(activeFilters); // Add Clicked filter button to list of active filters\r\n\t\t}\r\n\t\t//TEST\r\n    //console.log('Active Filters: now contains: ' + activeFilters);\r\n    //TODO - CAll function to result in generating new map with crime icons filtered - API CALL\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ToggleButtonGroup\r\n\t\t\t\tvalue={formats}\r\n\t\t\t\tonChange={handleFormat}\r\n\t\t\t\taria-label=\"text formatting\">\r\n\t\t\t\t{filters.map((filter) => (\r\n\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\tvalue={filter.name}\r\n\t\t\t\t\t\taria-label={filter.name}\r\n\t\t\t\t\t\tkey={uuid()}>\r\n\t\t\t\t\t\t{filter.name}\r\n\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t))}\r\n\t\t\t\t<ToggleButton\r\n\t\t\t\t\tvalue=\"reset\"\r\n\t\t\t\t\taria-label=\"reset filters\"\r\n\t\t\t\t\tkey={uuid()}>\r\n\t\t\t\t\tReset Filters\r\n\t\t\t\t</ToggleButton>\r\n\t\t\t</ToggleButtonGroup>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FilterButtonsList;\r\n","D:\\github\\safe-streets\\src\\util\\fire.jsx",[],"D:\\github\\safe-streets\\src\\components\\SearchForm.jsx",["71","72"],"// TODO https://material-ui.com/components/text-fields/\r\n\r\nimport React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst SearchForm = () => {     \r\n    \r\n  \r\n    return (     \r\n      <section className=\"login\">\r\n        I am a search form     \r\n       <form className=\"searchForm\" noValidate autoComplete=\"off\">       \r\n        <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />   \r\n      </form>\r\n      </section>\r\n    );\r\n  \r\n    };\r\n\r\n    export default SearchForm;","D:\\github\\safe-streets\\src\\components\\Login.jsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":92,"column":5,"nodeType":"79","endLine":92,"endColumn":7,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":17,"column":22,"nodeType":"83","messageId":"84","endLine":17,"endColumn":35},{"ruleId":"81","severity":1,"message":"85","line":1,"column":16,"nodeType":"83","messageId":"84","endLine":1,"endColumn":24},{"ruleId":"81","severity":1,"message":"82","line":10,"column":22,"nodeType":"83","messageId":"84","endLine":10,"endColumn":35},{"ruleId":"81","severity":1,"message":"86","line":14,"column":10,"nodeType":"83","messageId":"84","endLine":14,"endColumn":20},{"ruleId":"81","severity":1,"message":"87","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":11},{"ruleId":"81","severity":1,"message":"85","line":1,"column":16,"nodeType":"83","messageId":"84","endLine":1,"endColumn":24},{"ruleId":"81","severity":1,"message":"88","line":11,"column":18,"nodeType":"83","messageId":"84","endLine":11,"endColumn":28},{"ruleId":"81","severity":1,"message":"89","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":19},{"ruleId":"81","severity":1,"message":"90","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":20},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["93"],"no-unused-vars","'setFavourites' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'favourites' is assigned a value but never used.","'Nav' is defined but never used.","'setFilters' is assigned a value but never used.","'FormControl' is defined but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [authListener]",{"range":"96","text":"97"},[2602,2604],"[authListener]"]